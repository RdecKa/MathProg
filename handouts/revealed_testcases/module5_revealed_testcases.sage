functions = {0: m5p1,
 1: m5p2,
 2: m5p3,
 3: m5p4,
 4: m5p5,
 5: m5p6,
 6: m5p7,
 7: m5p8}

inputs = {
  0:{
    1: {0: [1], 1: [0]},
    2: {0: [1, 3, 4, 6, 7, 8], 1: [0, 2, 5, 6, 7], 2: [1, 3, 4, 5, 6, 7, 8], 3: [0, 2, 4, 5, 6, 8], 4: [0, 2, 3, 5, 8], 5: [1, 2, 3, 4], 6: [0, 1, 2, 3, 8], 7: [0, 1, 2, 8], 8: [0, 2, 3, 4, 6, 7]},
    8: {0: [1, 2, 3, 4, 5, 6, 7, 8], 1: [0, 3, 4, 5], 2: [0, 4, 6, 8], 3: [0, 1, 4, 5, 6], 4: [0, 1, 2, 3, 5, 6, 8], 5: [0, 1, 3, 4, 6, 8], 6: [0, 2, 3, 4, 5, 7, 8], 7: [0, 6], 8: [0, 2, 4, 5, 6]},
    11: {0: [], 1: [], 2: [], 3: [], 4: []},
    15: {0: [3], 1: [4], 2: [], 3: [0], 4: [1]},
    18: {0: [1, 2, 8], 1: [0, 2, 4, 6], 2: [0, 1, 3, 7, 8], 3: [2, 6, 7, 8], 4: [1, 5, 6, 8], 5: [4], 6: [1, 3, 4, 8], 7: [2, 3], 8: [0, 2, 3, 4, 6]},
    19: {0: [1, 2, 3, 4, 5], 1: [0, 2, 3, 4, 5], 2: [0, 1, 3, 5], 3: [0, 1, 2], 4: [0, 1, 5], 5: [0, 1, 2, 4]},
  },
  1:{
    0: {0: []},
    2: {0: [4], 1: [2], 2: [1], 3: [], 4: [0]},
    5: {0: [1, 5], 1: [0, 3, 9], 2: [4, 6, 9], 3: [1], 4: [2, 7], 5: [0, 8], 6: [2, 8], 7: [4, 8], 8: [5, 6, 7], 9: [1, 2]},
    7: {0: [2, 4, 5, 6, 7, 8, 9], 1: [2, 3, 4, 5, 6, 8], 2: [0, 1, 3, 4, 6], 3: [1, 2, 5, 6, 7, 8, 9], 4: [0, 1, 2, 7, 8, 9], 5: [0, 1, 3, 6, 7], 6: [0, 1, 2, 3, 5, 7, 8, 9], 7: [0, 3, 4, 5, 6, 9], 8: [0, 1, 3, 4, 6, 9], 9: [0, 3, 4, 6, 7, 8]},
    8: {0: [6], 1: [], 2: [3, 5], 3: [2], 4: [], 5: [2, 6], 6: [0, 5], 7: []},
    9: {0: [1, 2, 5, 8, 9], 1: [0, 2, 3, 4, 5, 6, 8], 2: [0, 1, 3, 4, 5, 6, 7], 3: [1, 2, 5, 7, 8, 9], 4: [1, 2, 6], 5: [0, 1, 2, 3, 6, 7, 8, 9], 6: [1, 2, 4, 5, 8, 9], 7: [2, 3, 5, 9], 8: [0, 1, 3, 5, 6, 9], 9: [0, 3, 5, 6, 7, 8]},
    11: {0: [3, 4], 1: [2, 3, 4], 2: [1, 3], 3: [0, 1, 2, 4], 4: [0, 1, 3]},
    14: {0: [], 1: [6, 8], 2: [7, 8], 3: [4, 8], 4: [3, 7], 5: [7, 8], 6: [1], 7: [2, 4, 5], 8: [1, 2, 3, 5]},
    16: {0: [2], 1: [2, 3], 2: [0, 1, 3, 4], 3: [1, 2], 4: [2]},
    17: {0: [1, 2, 3], 1: [0, 2, 3, 4], 2: [0, 1, 3], 3: [0, 1, 2, 4], 4: [1, 3]},
    18: {0: [1, 3, 5, 7, 8], 1: [0, 3, 7, 8], 2: [5, 6, 7], 3: [0, 1, 4, 7], 4: [3, 5, 6, 7, 8], 5: [0, 2, 4, 6], 6: [2, 4, 5, 7, 8], 7: [0, 1, 2, 3, 4, 6, 8], 8: [0, 1, 4, 6, 7]},
    19: {0: [], 1: [], 2: []},
  },
  2:{
    1: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [[0, 8, 4, 14, 12], [0, 6, 7, 10, 12, 13, 16, 17], [3, 5, 8, 10, 15, 16, 17], [3, 4, 5, 6, 9, 10, 12, 16, 17], [0, 1, 6, 7, 9, 10, 12, 13, 14, 15, 17], [1, 3, 5, 13, 14, 15, 16, 17], [1, 6, 7, 8, 13, 15, 16, 17], [0, 2, 3, 6, 9, 10, 12, 13, 14, 16, 17], [0, 1, 2, 6, 7, 10, 11, 15, 16, 17], [0, 1, 2, 4, 6, 10, 12, 13, 14, 16, 17], [0, 1, 2, 10, 8], [0, 1, 2, 3, 6, 8, 10], [0, 2, 4, 5, 6, 8, 10, 11, 13, 14], [3, 5, 10, 11, 13, 16]]),
    2: ([0, 1, 2, 3, 4, 5, 6, 7, 8], [[0, 1, 8], [2, 3, 4, 5, 7, 8], [1, 2, 6], [3, 7], [0, 1, 5, 6, 7], [1, 2, 6], [0, 2, 3, 4, 6, 7, 8], [8, 3, 5]]),
    3: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [[1, 2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 18], [0, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17], [0, 4, 6, 7, 11, 12, 14, 17, 18, 19], [1, 2, 5, 6, 7, 9, 12, 16, 17], [0, 2, 4, 5, 7, 9, 10, 11, 12, 15, 16, 18, 19], [6, 9, 10, 13, 16, 18], [3, 6, 11, 12, 13, 15, 17, 18, 19], [1, 2, 7, 10, 11, 12, 13, 14, 15, 16], [0, 1, 2, 3, 5, 7, 9, 10, 12, 15, 18], [4, 5, 7, 8, 10, 11, 12, 13, 17, 18], [0, 2, 4, 5, 7, 11, 13, 14, 15, 16, 17, 18], [1, 2, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19]]),
    9: ([0, 1, 2, 3, 4, 5], [[0, 1], [0, 1, 2, 3], [2, 4], [3], [0, 1, 3, 5], [2, 3], [1, 4], [1, 4], [1, 2, 3, 5], [0, 1, 3, 4]]),
    12: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [[0, 1, 2, 6, 7, 11, 14, 15], [0, 1, 2, 4, 7, 12, 13, 14], [1, 2, 4, 5, 7, 9, 11, 13, 14, 15], [0, 2, 3, 4, 8, 11, 13], [4, 5, 6, 8, 12, 14, 15], [1, 2, 15, 14, 9], [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 13], [3, 6, 8, 10, 11, 13, 14], [1, 2, 3, 4, 6, 8, 9, 15], [0, 2, 4, 5, 6, 7, 10, 12, 14], [1, 2, 3, 4, 5, 7, 9, 10, 12, 13], [0, 11, 3, 6]]),
    14: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [[8, 12, 7], [0, 2, 3, 5, 6, 12], [0, 4, 5, 6, 8, 9, 10, 11, 12], [0, 1, 3, 4, 5, 6, 7, 9], [1, 5, 6, 7, 9, 10], [3, 4, 5, 7, 9, 10], [8, 1, 2, 12, 7], [1, 2, 4, 6, 7, 8, 9, 10, 11], [1, 3, 5]]),
    15: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [[1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7], [8, 3, 4, 5, 7], [0, 2, 3, 4, 6, 9], [0, 2, 3, 4, 5, 6, 9], [0, 8, 3, 4, 6], [0, 1, 2, 3, 6, 7], [8, 1, 2, 9], [0, 1, 2, 6, 8, 9]]),
    16: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [[0, 3, 7, 8, 12, 13, 15], [1, 3, 4, 5, 6, 7, 9, 10], [0, 4, 5, 7, 8, 11, 13, 14], [2, 6, 7, 8, 9, 10, 12, 14, 15], [0, 1, 4, 5, 6, 8, 9, 10, 14], [1, 4, 5, 6, 7, 8, 11, 12, 13, 14], [0, 1, 3, 6, 9], [0, 1, 2, 8, 9, 10, 11, 12, 14], [0, 2, 4, 6, 9, 11]]),
    17: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [[0, 1, 4, 6, 7], [2, 3, 4, 6, 7, 8], [8, 1, 4, 6, 7], [0, 2, 3, 4, 6, 9], [8, 1, 2, 3], [8, 9, 3, 7], [1, 2, 9, 6, 7], [0, 2, 4, 6, 7, 9], [0, 2, 3, 7, 8, 9], [0, 9, 3, 5], [0, 1, 4, 6, 7], [0, 8, 3, 4, 6], [0, 1, 2, 5, 6, 7, 8, 9], [0, 1, 2, 3, 5, 8], [8, 5, 6]]),
    18: ([0, 1, 2, 3, 4, 5, 6], [[0, 1, 3, 4, 5], [0, 5], [2, 4, 5, 6], [3, 4, 5, 6], [1, 3, 4], [3], [0, 2, 3, 5], [0, 1, 2, 4, 6]]),
    20: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]),
    23: ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [[10], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]),
  },
  3:{
    0: (95, 97, 82, 89),
    2: (-99, 0, -38, 62),
    3: (26, 56, -89, -58),
    4: (-55, 82, 82, 87),
    7: (-30, -21, 40, 60),
    14: (45, 68, 5, 82),
    17: (-10, 87, -69, 98),
    19: (-98, 19, 3, 5),
  },
  4:{
    2: (95, -12, 9),
    3: (20, 22, 3),
    5: (48, 9, 8),
    9: (36, -59, 2),
    11: (64, -22, 3),
    17: (-83, 28, 0),
    19: (-10, 68, 5),
  },
  5:{
    0: (-37, -41, 6),
    1: (67, 99, 4),
    5: (57, 75, 7),
    7: (8, 21, 5),
    8: (70, 91, 10),
    9: (-40, 63, 8),
    10: (79, -95, 0),
    12: (-90, -44, 8),
    13: (6, -23, 2),
    16: (65, -97, 1),
    17: (74, -61, 7),
    18: (-80, -85, 8),
  },
  6:{
    0: ((0, 10, 4), 5000, 0, 3, -7, 10),
    1: ((-4, 2, 10), 5000, 2, 7, 8, 10),
    3: ((7, 8, 4), 5000, -10, -9, 9, 9),
    4: ((-10, -10, 6), 5000, 10, 10, -10, -2),
    9: ((10, -8, 6), 5000, 6, 7, -2, 6),
    10: ((-4, -9, 10), 5000, 4, 5, 3, 4),
    12: ((9, 10, 7), 5000, 2, 7, 1, 3),
    13: ((3, -9, 3), 5000, -6, -6, 3, 7),
    14: ((8, 5, 0), 5000, 3, 8, -9, 8),
    15: ((-3, -2, 4), 5000, -9, 1, -9, 0),
    17: ((8, 2, 6), 5000, -6, 3, -5, -1),
    19: ((-7, -7, 9), 5000, 10, 10, 9, 9),
  },
  7:{
    2: (x^2 + y^2, 5000, 0.674989000000000, 1.25835200000000, -0.705638000000000, 1.84582900000000, 16.8141710000000),
    4: (x^2 + y^2, 5000, 0.504567000000000, 1.87590900000000, -0.0596520000000000, 1.56012400000000, 17.0380710000000),
    5: (x^2 + y, 5000, 2.85707300000000, 3.02172200000000, 2.81289100000000, 3.21171100000000, 30.6301720000000),
    7: (x^2 + y, 5000, 3.38130900000000, 3.81410800000000, 0.390733000000000, 3.12397300000000, 39.0948340000000),
  },
}

expected = {
  0:{
    1: 2,
    2: 4,
    8: 5,
    11: 1,
    15: 2,
    18: 3,
    19: 4,
  },
  1:{
    0: 1,
    2: 3,
    5: 5,
    7: 3,
    8: 6,
    9: 3,
    11: 2,
    14: 5,
    16: 3,
    17: 2,
    18: 3,
    19: 3,
  },
  2:{
    1: 3,
    2: 2,
    3: 3,
    9: 2,
    12: 2,
    14: 2,
    15: 2,
    16: 3,
    17: 2,
    18: 2,
    20: 1,
    23: 2,
  },
  3:{
    0: lambda student_answer : student_answer(0,0) == (95<=0 and 97 >=0 and 82<=0 and 89>=0),
    2: lambda student_answer : student_answer(0,0) == (-99<=0 and 0 >=0 and -38<=0 and 62>=0),
    3: lambda student_answer : student_answer(0,0) == (26<=0 and 56 >=0 and -89<=0 and -58>=0),
    4: lambda student_answer : student_answer(0,0) == (-55<=0 and 82 >=0 and 82<=0 and 87>=0),
    7: lambda student_answer : student_answer(0,0) == (-30<=0 and -21 >=0 and 40<=0 and 60>=0),
    14: lambda student_answer : student_answer(0,0) == (45<=0 and 68 >=0 and 5<=0 and 82>=0),
    17: lambda student_answer : student_answer(0,0) == (-10<=0 and 87 >=0 and -69<=0 and 98>=0),
    19: lambda student_answer : student_answer(0,0) == (-98<=0 and 19 >=0 and 3<=0 and 5>=0),
  },
  4:{
    2: lambda student_answer : student_answer(0,0) == (95-9<=0 and 95+9 >=0 and -12-9<=0 and -12+9>=0),
    3: lambda student_answer : student_answer(0,0) == (20-3<=0 and 20+3 >=0 and 22-3<=0 and 22+3>=0),
    5: lambda student_answer : student_answer(0,0) == (48-8<=0 and 48+8 >=0 and 9-8<=0 and 9+8>=0),
    9: lambda student_answer : student_answer(0,0) == (36-2<=0 and 36+2 >=0 and -59-2<=0 and -59+2>=0),
    11: lambda student_answer : student_answer(0,0) == (64-3<=0 and 64+3 >=0 and -22-3<=0 and -22+3>=0),
    17: lambda student_answer : student_answer(0,0) == (-83-0<=0 and -83+0 >=0 and 28-0<=0 and 28+0>=0),
    19: lambda student_answer : student_answer(0,0) == (-10-5<=0 and -10+5 >=0 and 68-5<=0 and 68+5>=0),
  },
  5:{
    0: lambda student_answer : student_answer(0,0) == ((-37)^2 + (-41)^2 <= 6^2),
    1: lambda student_answer : student_answer(0,0) == ((67)^2 + (99)^2 <= 4^2),
    5: lambda student_answer : student_answer(0,0) == ((57)^2 + (75)^2 <= 7^2),
    7: lambda student_answer : student_answer(0,0) == ((8)^2 + (21)^2 <= 5^2),
    8: lambda student_answer : student_answer(0,0) == ((70)^2 + (91)^2 <= 10^2),
    9: lambda student_answer : student_answer(0,0) == ((-40)^2 + (63)^2 <= 8^2),
    10: lambda student_answer : student_answer(0,0) == ((79)^2 + (-95)^2 <= 0^2),
    12: lambda student_answer : student_answer(0,0) == ((-90)^2 + (-44)^2 <= 8^2),
    13: lambda student_answer : student_answer(0,0) == ((6)^2 + (-23)^2 <= 2^2),
    16: lambda student_answer : student_answer(0,0) == ((65)^2 + (-97)^2 <= 1^2),
    17: lambda student_answer : student_answer(0,0) == ((74)^2 + (-61)^2 <= 7^2),
    18: lambda student_answer : student_answer(0,0) == ((-80)^2 + (-85)^2 <= 8^2),
  },
  6:{
    0: 10.2,
    1: 2.1,
    3: 0.0,
    4: 0.0,
    9: 0.0,
    10: 0.0,
    12: 0.0,
    13: 0.0,
    14: 0.0,
    15: 40.7,
    17: 0.0,
    19: 0.0,
  },
  7:{
    2: 3.0,
    4: 6.0,
    5: 1.0,
    7: 17.0,
  },
}

maxtimes = {
  0:5,
  1:5,
  2:5,
  3:5,
  4:5,
  5:5,
  6:5,
  7:5,
}